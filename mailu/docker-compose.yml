# This file is auto-generated by the Mailu configuration wizard.
# Please read the documentation before attempting any change.
# Generated for compose flavor

version: '2.2'

services:

  # External dependencies
  redis:
    image: redis:alpine
    container_name: mailu_redis
    restart: always
    volumes:
      - "${ROOT_DIR}/redis:/data"
    networks:
      - mailu
    
  # Core services
  front:
    image: ${DOCKER_ORG:-mailu}/${DOCKER_PREFIX:-}nginx:${MAILU_VERSION}
    container_name: mailu_front
    restart: always
    env_file: 
      - mailu.env
      - secrets.env
    logging:
      driver: json-file
    ports:
      - "${SERVER_IP}:25:25"
      - "${SERVER_IP}:465:465"
      - "${SERVER_IP}:587:587"
      - "${SERVER_IP}:110:110"
      - "${SERVER_IP}:995:995"
      - "${SERVER_IP}:143:143"
      - "${SERVER_IP}:993:993"
    labels:
      # Reverse proxy and certificate
      - "traefik.enable=true"
      - "traefik.docker.network=reverse-proxy"
      # Website Configuration
      - "traefik.http.routers.${SERVICE_NAME}.rule=Host(`${TRAEFIK_DOMAIN}`)"
      - "traefik.http.routers.${SERVICE_NAME}.tls.certresolver=myresolver"
      - "traefik.http.routers.${SERVICE_NAME}.entrypoints=websecure"
      - "traefik.http.routers.${SERVICE_NAME}.service=${SERVICE_NAME}"
      - "traefik.http.routers.${SERVICE_NAME}.tls=true"
      - "traefik.http.services.${SERVICE_NAME}.loadbalancer.server.port=80" 
      # Since no TLS is activated, only port 80 is open
      #- "traefik.http.services.mailu_websecure.loadBalancer.server.port=80"
      #- "traefik.http.routers.mailu_websecure.tls.certresolver=myresolver"
      # SMTP: NO SSL
      #- "traefik.tcp.routers.mailu_smtp.rule=HostSNI(``)"
      #- "traefik.tcp.routers.mailu_smtp.entrypoints=smtp"
      #- "traefik.tcp.routers.mailu_smtp.service=mailu_smtp"
      # SMTP: SSL
      #- "traefik.tcp.routers.mailu_smtp_ssl1.rule=HostSNI(`smtp.lazymedia.net`, `lazymedia.net`, `mail.lazymedia.net`)"
      #- "traefik.tcp.routers.mailu_smtp_ssl1.entrypoints=smtp_ssl"
      #- "traefik.tcp.routers.mailu_smtp_ssl1.tls=true"
      #- "traefik.tcp.routers.mailu_smtp_ssl1.tls.certresolver=myresolver"
      #- "traefik.tcp.routers.mailu_smtp_ssl1.service=mailu_smtp"
      # STARTTLS
      #- "traefik.tcp.routers.mailu_smtp_start1.rule=HostSNI(`smtp.lazymedia.net`, `lazymedia.net`, `mail.lazymedia.net`)"
      #- "traefik.tcp.routers.mailu_smtp_start1.entrypoints=starttls"
      #- "traefik.tcp.routers.mailu_smtp_start1.tls=true"
      #- "traefik.tcp.routers.mailu_smtp_start1.tls.certresolver=myresolver"
      #- "traefik.tcp.routers.mailu_smtp_start1.service=mailu_smtp"
      # SMTP load balancer port 
      #- "traefik.tcp.services.mailu_smtp.loadBalancer.server.port=25"
      # POP3: NO SSL
      #- "traefik.tcp.routers.mailu_pop3.rule=HostSNI(``)"
      #- "traefik.tcp.routers.mailu_pop3.entrypoints=pop3"
      #- "traefik.tcp.routers.mailu_pop3.service=mailu_pop3"
      # POP3: SSL
      #- "traefik.tcp.routers.mailu_pop3_ssl1.rule=HostSNI(`pop3.lazymedia.net`, `lazymedia.net`, `mail.lazymedia.net`)"
      #- "traefik.tcp.routers.mailu_pop3_ssl1.entrypoints=pop3_ssl"
      #- "traefik.tcp.routers.mailu_pop3_ssl1.tls=true"
      #- "traefik.tcp.routers.mailu_pop3_ssl1.tls.certresolver=myresolver"
      #- "traefik.tcp.routers.mailu_pop3_ssl1.service=mailu_pop3"
      # POP3 load balancer port 
      #- "traefik.tcp.services.mailu_pop3.loadBalancer.server.port=110"
      # IMAP: NO SSL
      #- "traefik.tcp.routers.mailu_imap.rule=HostSNI(`*`)"
      #- "traefik.tcp.routers.mailu_imap.entrypoints=imap"
      #- "traefik.tcp.routers.mailu_imap.service=mailu_imap"
      # IMAP: SSL
      #- "traefik.tcp.routers.mailu_imap_ssl1.rule=HostSNI(`imap.lazymedia.net`, `lazymedia.net`, `mail.lazymedia.net`)"
      #- "traefik.tcp.routers.mailu_imap_ssl1.entrypoints=imap_ssl"
      #- "traefik.tcp.routers.mailu_imap_ssl1.tls=true"
      #- "traefik.tcp.routers.mailu_imap_ssl1.tls.certresolver=myresolver"
      #- "traefik.tcp.routers.mailu_imap_ssl1.service=mailu_imap"
      # IMAP load balancer port 
      #- "traefik.tcp.services.mailu_imap.loadBalancer.server.port=143"
    volumes:
      - "${ROOT_DIR}/certs:/certs"
      - "${ROOT_DIR}/overrides/nginx:/overrides"
    networks:
      - mailu
      - reverse-proxy

  certdumper:
    image: ${DOCKER_ORG:-mailu}/${DOCKER_PREFIX:-}traefik-certdumper:master
    container_name: mailu_certdumper
    restart: always
    environment:
      # Make sure this is the same as the main=-domain in traefik.toml
      # !!! Also donâ€™t forget to add "TRAEFIK_DOMAIN=[...]" to your .env!
      - DOMAIN=${TRAEFIK_DOMAIN}
      - TRAEFIK_VERSION=${TRAEFIK_VERSION}
    volumes:
      # Folder, which contains the acme.json
      - "${TRAEFIK_CERTS_DIR}/acme.json:/traefik/acme.json"
      # Folder, where cert.pem and key.pem will be written
      - "${ROOT_DIR}/certs:/output"
    networks:
      - mailu

  resolver:
    image: ${DOCKER_ORG:-mailu}/${DOCKER_PREFIX:-}unbound:${MAILU_VERSION}
    container_name: mailu_resolver
    env_file: 
      - mailu.env
      - secrets.env
    restart: always
    networks:
      mailu:
        ipv4_address: ${RESOLVER_IP}

  admin:
    image: ${DOCKER_ORG:-mailu}/${DOCKER_PREFIX:-}admin:${MAILU_VERSION}
    container_name: mailu_admin
    restart: always
    env_file: 
      - mailu.env
      - secrets.env
    volumes:
      - "${ROOT_DIR}/data:/data"
      - "${ROOT_DIR}/dkim:/dkim"
    depends_on:
      - redis
    networks:
      - mailu

  imap:
    image: ${DOCKER_ORG:-mailu}/${DOCKER_PREFIX:-}dovecot:${MAILU_VERSION}
    container_name: mailu_imap
    restart: always
    env_file: 
      - mailu.env
      - secrets.env
    volumes:
      - "${ROOT_DIR}/mail:/mail"
      - "${ROOT_DIR}/overrides:/overrides"
    depends_on:
      - front
    networks:
      - mailu

  smtp:
    image: ${DOCKER_ORG:-mailu}/${DOCKER_PREFIX:-}postfix:${MAILU_VERSION}
    container_name: mailu_smtp
    restart: always
    env_file: 
      - mailu.env
      - secrets.env
    volumes:
      - "${ROOT_DIR}/overrides:/overrides"
    depends_on:
      - front
      - resolver
    dns:
      - ${RESOLVER_IP}
    networks:
      - mailu


  antispam:
    image: ${DOCKER_ORG:-mailu}/${DOCKER_PREFIX:-}rspamd:${MAILU_VERSION}
    container_name: mailu_antispam
    restart: always
    env_file: 
      - mailu.env
      - secrets.env
    volumes:
      - "${ROOT_DIR}/filter:/var/lib/rspamd"
      - "${ROOT_DIR}/dkim:/dkim"
      - "${ROOT_DIR}/overrides/rspamd:/etc/rspamd/override.d"
    depends_on:
      - front
      - resolver
    dns:
      - ${RESOLVER_IP}
    networks:
      - mailu

  # Optional services
  antivirus:
    image: ${DOCKER_ORG:-mailu}/${DOCKER_PREFIX:-}clamav:${MAILU_VERSION}
    container_name: mailu_antivirus
    restart: always
    env_file: 
      - mailu.env
      - secrets.env
    volumes:
      - "${ROOT_DIR}/filter:/data"
    depends_on:
      - resolver
    dns:
      - ${RESOLVER_IP}
    networks:
      - mailu

  webdav:
    image: ${DOCKER_ORG:-mailu}/${DOCKER_PREFIX:-}radicale:${MAILU_VERSION}
    container_name: mailu_webdav
    restart: always
    env_file: 
      - mailu.env
      - secrets.env
    volumes:
      - "${ROOT_DIR}/dav:/data"
    networks:
      - mailu

  fetchmail:
    image: ${DOCKER_ORG:-mailu}/${DOCKER_PREFIX:-}fetchmail:${MAILU_VERSION}
    container_name: mailu_fetchmail
    restart: always
    env_file: 
      - mailu.env
      - secrets.env
    depends_on:
      - resolver
    dns:
      - ${RESOLVER_IP}
    networks:
      - mailu

  # Webmail
  webmail:
    image: ${DOCKER_ORG:-mailu}/${DOCKER_PREFIX:-}rainloop:${MAILU_VERSION}
    container_name: mailu_webmail
    restart: always
    env_file: 
      - mailu.env
      - secrets.env
    volumes:
      - "${ROOT_DIR}/webmail:/data"
    depends_on:
      - imap
    networks:
      - mailu

  database:
    image: ${DOCKER_ORG:-mailu}/${DOCKER_PREFIX:-}postgresql:${MAILU_VERSION}
    container_name: mailu_db
    restart: always
    env_file: 
      - mailu.env
      - secrets.env
    volumes:
      - "${ROOT_DIR}/data/psql_db:/data"
      - "${ROOT_DIR}/data/psql_backup:/backup"
    networks:
      - mailu

networks:
    mailu:
        external: true
    reverse-proxy:
        external: true
